- What primitives does base.frg
- add signatures (cross check if it is there)
- add hashes ()
- no key cycles
- adding pairs
- adding timestamps
* TODO Extend tool with signature and hashes
* DONE fix the problem with encryption related terms
CLOSED: [2025-09-01 Mon 15:14]
** TODO add explanation in documentation
when stating term to be (enc term) it is now interpreted as you saying the agent
knows the inverse key so is able to talk about the contents. If don't want to
talk about the contents of the message only passing it on replace with simple
variable of type message instead.
(In this scenario however even when to the agent the term is opaque some random
message term if it knows the inverse key it can still look up the corresponding
key)
* TODO implementing timestamps
* TODO check documentation is up to date and correct
* TODO text should be able to contain multiple terms
have implemented this have to debug issues with this as not able to generate the
typeflaw attack currenty.
** TODO debug why trying to find the attack for type_flaw_prot is failing
* TODO constraints for generating a particular trace
** TODO debug why generating a particular trace is failing for test_seq_text
Seems like the error is in how the protocol was originally stated not with the
trace code itself as unable to generate proper honest run there as well
** TODO can add manual test for transcribed forge code, add
tests for transcribed forge code maybe can be improved

* TODO Final goal
 * model a protocol with singatures hashing and encryption
 * state correspondence property (example mutual authentication)
 * maybe state correspondence property using a template

* TODO maybe change to give constraint using a json file
* TODO just like added test for parser add manual tests for running the file
currently cannot get information for generated runs without GUI ask Professor Tim
if it is possible and use that for this automated testing.

* TODO figure out what trace and equivalence based predicates would look like
** TODO maybe better interface for stating predicates as well?
 * The only thing ensuring that attacker can't generate the same nonces as the
   other agents is a uniq-orig statement, can probably add separate constraint
   which says a nonce can never be genrated agian transcription for skeleton
   blocks of code is complete, still have to do proper checks (seems to be
   working with two_nonce.rkt have to check in more detail later)
 * consider if want to add code for transcribing skeleton to transcribe.py,
   currently code for that only in transcribe_seq.py
 * added code for checking if strand knows the encryption key, have to check
   this more (two nonce working, have to check if will give arbitrary ciphertext
   when key is not known)
 * While sending message to recognise ciphertext don't need to know inverse key,
   need to know while receiving add this later

* TODO add run files for simple,simple_enc good for testing updates to transcribe

* Doubts
** TODO evaulator giving type error when using functions
When using getPUBK[name0] get error that type should be name not mesg, but
getPUBK[two_nonce_resp0.agent] works eventhough  two_nonce_resp0.agent = name0
** TODO get perf metrics for ootway_rees two_nonce and others
get these performance metrics for different versisons to send to sir
** TODO unable to make many other custom solvers work ask sir about being able to use those
